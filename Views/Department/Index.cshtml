@model IEnumerable<HrManagement.Models.Department>
@{
    ViewData["Title"] = "Department Management";
    var companies = ViewBag.Companies as List<Company>;
    Guid selectedCompany = ViewBag.SelectedCompany ?? Guid.Empty;
}

<h2>Department Management</h2>

<div class="row mb-3">
    <div class="col-md-6">
        <form method="get" asp-controller="Department" asp-action="Index">
            <div class="input-group">
                @* <select class="form-select" name="companyId" onchange="this.form.submit()">
                    <option disabled @(selectedCompany == Guid.Empty ? "selected" : "")>Select a company</option>
                    @foreach (var company in companies)
                    {
                        <option value="@company.ComId" selected="@(selectedCompany == company.ComId)">
                            @company.ComName
                        </option>
                    }
                </select> *@
                <select class="form-select" name="companyId" onchange="this.form.submit()">
                    <option disabled selected="@(selectedCompany == Guid.Empty ? "selected" : null)">Select a company</option>
                    @foreach (var company in companies)
                    {
                        <option value="@company.ComId" selected="@(selectedCompany == company.ComId ? "selected" : null)">
                            @company.ComName
                        </option>
                    }
                </select>

                <button type="submit" class="btn btn-outline-primary">Filter</button>
            </div>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <button class="btn btn-primary" id="btnAdd">Add Department</button>
    </div>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Department Name</th>
            <th>Company</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var dept in Model)
        {
            <tr data-id="@dept.DeptId">
                <td>@dept.DeptName</td>
                <td>@dept.Company?.ComName</td>
                <td>
                    <button class="btn btn-sm btn-info btn-edit">Edit</button>
                    <button class="btn btn-sm btn-danger btn-delete">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="departmentModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="departmentForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add/Edit Department</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="DeptId" id="DeptId" />
                    <input type="hidden" name="ComId" id="ComId" value="@ViewBag.SelectedCompany" />

                    <div class="mb-3">
                        <label for="DeptName" class="form-label">Department Name</label>
                        <input type="text" class="form-control" id="DeptName" name="DeptName" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            const modal = new bootstrap.Modal(document.getElementById('departmentModal'));
            let isEdit = false;

            $('#btnAdd').click(function () {
                isEdit = false;
                $('#departmentForm')[0].reset();
                $('#DeptId').val('');
                $('#ComId').val('@ViewBag.SelectedCompany');
                $('#modalTitle').text('Add Department');
                modal.show();
            });

            $('.btn-edit').click(function () {
                isEdit = true;
                const row = $(this).closest('tr');
                const id = row.data('id');

                $.get('/Department/GetById', { id }, function (data) {
                    $('#DeptId').val(data.deptId);
                    $('#DeptName').val(data.deptName);
                    $('#ComId').val(data.comId);
                    $('#modalTitle').text('Edit Department');
                    modal.show();
                });
            });

            $('#departmentForm').submit(function (e) {
                e.preventDefault();

                const formData = new FormData(this);
                const url = isEdit ? '/Department/Edit' : '/Department/Create';

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.success) {
                            modal.hide();
                            location.reload();
                        } else {
                            alert(res.message || 'Error occurred');
                        }
                    }
                });
            });

            $('.btn-delete').click(function () {
                if (!confirm('Are you sure you want to delete this department?')) return;
                const id = $(this).closest('tr').data('id');

                $.post('/Department/Delete', { id }, function (res) {
                    if (res.success) {
                        location.reload();
                    } else {
                        alert('Delete failed');
                    }
                });
            });
        });
    </script>
}
